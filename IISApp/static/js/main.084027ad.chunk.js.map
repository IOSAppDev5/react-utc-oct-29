{"version":3,"sources":["logo.svg","components/Hello.js","components/SimpleHOC.js","components/Counter.js","model/Customer.js","components/CustomerForm.js","components/ListCustomers.js","components/ListCustomersSecure.js","components/WikiSearch.js","components/ReduxDemo.js","redux/actionCreators.js","components/Login.js","components/ProtectedRoute.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","hello","props","react_default","a","createElement","message","Date","toTimeString","children","simpleHOC","WrappedComponent","style","border","minHeight","Counter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","count","inc","event","updatedCount","setState","change","evt","parseInt","target","value","update","inpRef","console","log","decr","bind","assertThisInitialized","_this2","text","onClick","type","onChange","ref","Component","Customer","id","name","location","CustomerForm","customer","propName","updatedCustomer","objectSpread","save","onSave","initState","cancel","onCancel","nextProps","placeholder","ListCustomers","data","addMode","selectedCustomer","add","axios","post","customersURL","then","updatedData","toConsumableArray","push","alert","put","index","findIndex","cust","cancelEdit","delete","splice","addNew","cancelAddNew","edit","process","initData","get","resp","_this3","output","map","key","className","backgroundColor","display","flexFlow","justifyContent","components_CustomerForm","PureComponent","ListCustomersSecure","headers","x-access-token","token","connect","isAuth","WikiSearh","results","search","searchText","callWikiAPI","params","action","format","origin","_","debounce","item","ReduxDemo","increment","addToCtr","inp","fetch","ctr","customers","counter","dispatch","payload","actionCreators","Login","shouldRedirect","login","username","userInp","pwd","pwdInp","password","setAuth","setToken","Redirect","to","react","reactstrap_es","color","ProtectedRoute","component","Route","path","render","withRouter","App","src","logo","alt","BrowserRouter","basename","Link","exact","Hello","components_ProtectedRoute","WikiSearch","Boolean","window","hostname","match","store","createStore","arguments","length","undefined","applyMiddleware","next","getState","result","thunk","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.084027ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\n\r\nconst hello = (props)=>{\r\n\r\n    return (\r\n        <div>\r\n            <h3>Hello Component</h3>\r\n            <p>This is a functional component</p>\r\n            <p>Message: {props.message}</p>\r\n            <p>Generated @ { new Date().toTimeString()}</p>\r\n            <p>Content: {props.children}</p>\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default hello;","import React from 'react';\r\n\r\n// const simpleHOC = (props) => {\r\n//     return (\r\n//         <div style={{border: \"2px solid yellow\", minHeight: \"100px\"}}>\r\n//                 {props.children}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nconst simpleHOC = (WrappedComponent) => {\r\n\r\n    //returns a component\r\n    return (props) => {\r\n        return (\r\n            <div style={{border: \"2px solid yellow\", minHeight: \"100px\"}}>\r\n                <WrappedComponent {...props}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default simpleHOC;","import React, {Component} from 'react';\r\nimport simpleHOC from './SimpleHOC';\r\n\r\nclass Counter extends Component{\r\n\r\n    //ES 7\r\n    state = {\r\n        count: 0\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(\"Counter constructor\");\r\n        this.decr = this.decr.bind(this);\r\n\r\n        //ES6\r\n        // this.state = {\r\n        //     count: 0\r\n        // }        \r\n    }\r\n    //Arrow Function(ES7)\r\n    inc = (event)=> {\r\n        //console.log(event);\r\n        //this.state.count++;\r\n        const updatedCount = this.state.count + 1;\r\n        this.setState({\r\n            count: updatedCount\r\n        });\r\n    }\r\n    decr(){\r\n\r\n        const updatedCount = this.state.count - 1;\r\n        this.setState({\r\n            count: updatedCount\r\n        });\r\n\r\n    }\r\n    change = (evt) => {\r\n\r\n        this.setState({\r\n            count: parseInt(evt.target.value)\r\n        });\r\n    }\r\n    update = () => {\r\n\r\n        this.setState({\r\n            count: parseInt(this.inpRef.value)\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <p>Counter</p>\r\n                <p>\r\n                    <strong>{this.props.text}: {this.state.count}</strong>\r\n                </p>\r\n                <div>\r\n                    {/* <button onclick=\"inc();\">Inc</button> */}\r\n                    <button onClick={this.inc}>Inc</button>\r\n                    <button onClick={this.decr}>Decr</button>\r\n                </div>\r\n                <div>\r\n                    {/* Controlled Input(2-way binding) */}\r\n                    Count: <input type=\"number\" \r\n                            value={this.state.count} onChange={this.change}/>\r\n                </div>\r\n                <div>\r\n                    {/* Uncontrolled Input */}\r\n                    Set: <input type=\"number\" ref={(inpRef) => {this.inpRef = inpRef}}/>\r\n                    <button onClick={this.update}>Update</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default simpleHOC(Counter);\r\n\r\n//export default Counter;","export class Customer{\r\n\r\n    constructor(id, name, location){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.location = location;\r\n    }\r\n\r\n    //Other functionalities\r\n}","import React, {Component} from 'react';\r\nimport { Customer } from '../model/Customer';\r\n\r\nclass CustomerForm extends Component{\r\n\r\n    state = {\r\n        customer: new Customer(0, \"\", \"\")\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"[CustomerForm constructor]\");\r\n\r\n        this.initState = {...this.state};\r\n\r\n        if(this.props.customer){\r\n            this.state.customer = this.props.customer;\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n\r\n        console.log(\"[CustomerForm componentWillReceiveProps]: \", nextProps);\r\n        // if(nextProps.customer){\r\n        //     this.setState({\r\n        //         customer: nextProps.customer\r\n        //     })\r\n        // }\r\n    }\r\n    componentWillMount(){\r\n        console.log(\"[CustomerForm componentWillMount]\");\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"[CustomerForm componentDidMount]\");\r\n    }\r\n\r\n    change = (evt) => {\r\n\r\n        const value = evt.target.value;\r\n        const propName = evt.target.name;\r\n\r\n        const updatedCustomer = {...this.state.customer};\r\n        if(propName === \"id\"){\r\n            updatedCustomer[propName]= parseInt(value);    \r\n        }\r\n        else{\r\n            updatedCustomer[propName]= value;\r\n        }\r\n        \r\n\r\n        this.setState({\r\n            customer: updatedCustomer\r\n        });\r\n        \r\n    }\r\n    save = () => {\r\n        this.props.onSave(this.state.customer);\r\n        this.setState(this.initState);\r\n    }\r\n    cancel = () => {\r\n\r\n        this.props.onCancel();\r\n    }\r\n\r\n    render(){\r\n\r\n        console.log(\"[CustomerForm render]\");\r\n\r\n        return (\r\n            <div>\r\n                <h4>Customer Form</h4>\r\n                <fieldset>\r\n                    <p>Customer ID:</p>\r\n                    <div>\r\n                        <input type=\"number\" placeholder=\"ID\" name=\"id\" value={this.state.customer.id} onChange={this.change}/>\r\n                    </div>\r\n                    <p>Name:</p>\r\n                    <div>\r\n                        <input  placeholder=\"Name\" name=\"name\" value={this.state.customer.name} onChange={this.change}/>\r\n                    </div>\r\n                    <p>Location:</p>\r\n                    <div>\r\n                        <input  placeholder=\"Location\" name=\"location\" value={this.state.customer.location} onChange={this.change}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={this.save}>Save</button>\r\n                        <button onClick={this.cancel}>Cancel</button>\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CustomerForm;\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport {Customer} from '../model/Customer';\r\nimport './ListCustomers.css';\r\nimport CustomerForm from './CustomerForm';\r\nimport axios from 'axios';\r\n\r\nclass ListCustomers extends PureComponent{\r\n\r\n    state = {\r\n        data : [],\r\n        addMode: false,\r\n        selectedCustomer: null\r\n    }\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        console.log(\"[ListCustomers constructor]\")\r\n\r\n        console.log(\"REACT_APP_CUSTOMERS_API_URL: \" + process.env.REACT_APP_CUSTOMERS_API_URL);\r\n        this.customersURL = process.env.REACT_APP_CUSTOMERS_API_URL;\r\n\r\n        //Initialize the data(customers)\r\n        // this.state.data.push(new Customer(1, \"Google\", \"Hyderabad\"));\r\n        // this.state.data.push(new Customer(2, \"Facebook\", \"Bengaluru\"));\r\n        // this.state.data.push(new Customer(3, \"Apple\", \"Hyderabad\"));\r\n        // this.state.data.push(new Customer(4, \"Reliance\", \"Mumbai\"));\r\n\r\n        this.initData = [...this.state.data];\r\n    }\r\n    componentWillMount(){\r\n        console.log(\"[ListCustomers componentWillMount]\");\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"[ListCustomers componentDidMount]\");\r\n\r\n        axios\r\n            .get(this.customersURL)\r\n            .then((resp) => {\r\n                console.log(\"Success\");\r\n                console.log(resp);\r\n                this.setState({\r\n                    data: resp.data\r\n                })\r\n\r\n            }, (resp) => {\r\n                console.log(\"Failed\");\r\n                console.log(resp);\r\n            });\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        console.log(\"[ListCustomers componentWillReceiveProps]\");\r\n    }\r\n    // shouldComponentUpdate(){\r\n    //     console.log(\"[ListCustomers shouldComponentUpdate]\");\r\n    //     return true;\r\n    // }\r\n    componentWillUpdate(){\r\n        console.log(\"[ListCustomers componentWillUpdate]\");\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"[ListCustomers componentDidUpdate]\");\r\n    }\r\n\r\n\r\n    add = (customer) => {\r\n\r\n        axios\r\n            .post(this.customersURL, customer)\r\n            .then(() => {\r\n                const updatedData = [...this.state.data];\r\n                updatedData.push(customer);\r\n                //updatedData.push(new Customer(parseInt(customer.id), customer.name, customer.location));\r\n\r\n                this.setState({\r\n                    data: updatedData\r\n                })\r\n                alert(\"Saved\");\r\n            }, () => {\r\n                alert(\"Failed\");\r\n            });\r\n    }\r\n    update = (customer) => {\r\n\r\n        axios\r\n            .put(this.customersURL, customer)\r\n            .then(() => {\r\n                const updatedData = [...this.state.data];\r\n                const index = updatedData.findIndex(cust => cust.id === customer.id);\r\n                updatedData[index] = customer;\r\n        \r\n                this.setState({\r\n                    data: updatedData,\r\n                    selectedCustomer: null\r\n                });\r\n                alert(\"Updated\");\r\n            }, () => {\r\n                alert(\"Failed\");\r\n            });\r\n    }\r\n    cancelEdit = () => {\r\n\r\n        this.setState({\r\n            selectedCustomer: null\r\n        });\r\n    }\r\n\r\n    delete = (index) => {\r\n\r\n\r\n        axios\r\n            .delete(this.customersURL + \"/\" + this.state.data[index].id)\r\n            .then(() => {\r\n\r\n                const updatedData = [...this.state.data];\r\n                updatedData.splice(index, 1);\r\n        \r\n                this.setState({\r\n                    data: updatedData\r\n                });\r\n                alert(\"Deleted\");\r\n\r\n            }, () => {\r\n                alert(\"Failed\");\r\n            })\r\n\r\n       \r\n    }\r\n\r\n    addNew = () => {\r\n\r\n        this.setState({\r\n            addMode: true\r\n        });\r\n    }\r\n\r\n    cancelAddNew = () => {\r\n        this.setState({\r\n            addMode: false\r\n        });\r\n    }\r\n\r\n    edit = (index) => {\r\n\r\n        this.setState({\r\n            selectedCustomer: this.state.data[index]\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        console.log(\"[ListCustomers render]\");\r\n        var output = this.state.data.map( (cust, index) => {\r\n            return (\r\n                <div key={index} className=\"customer\">\r\n                    <p>Id: {cust.id}</p>\r\n                    <p>Name: {cust.name}</p>\r\n                    <p>Location: {cust.location}</p>\r\n                    <div>\r\n                        {/* <button onClick={() => {this.delete(index)}}>Delete</button> */}\r\n                        <button onClick={this.delete.bind(this, index)}>Delete</button>\r\n                        <button onClick={() => {this.edit(index)}}>Edit</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n        return (\r\n            <div>\r\n                <h3>Customers</h3>\r\n               \r\n                <div style={{backgroundColor: ' rgb(54, 51, 51)',  display: 'flex', flexFlow: 'row wrap', justifyContent: 'center'}}>\r\n                    {output}\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.addNew}>Add New</button>\r\n                </div>\r\n                {this.state.addMode ? <CustomerForm onSave={this.add} \r\n                                                onCancel={this.cancelAddNew}/> : null}\r\n                \r\n                {this.state.selectedCustomer? <CustomerForm key={this.state.selectedCustomer.id} \r\n                                                    customer={this.state.selectedCustomer} \r\n                                                    onSave={this.update} onCancel={this.cancelEdit}/> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ListCustomers;\r\n","import React, {PureComponent} from 'react';\r\nimport {Customer} from '../model/Customer';\r\nimport './ListCustomers.css';\r\nimport CustomerForm from './CustomerForm';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ListCustomersSecure extends PureComponent{\r\n\r\n    state = {\r\n        data : [],\r\n        addMode: false,\r\n        selectedCustomer: null\r\n    }\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        console.log(\"[ListCustomers constructor]\")\r\n\r\n        //console.log(\"REACT_APP_CUSTOMERS_API_URL: \" + process.env.REACT_APP_CUSTOMERS_API_URL);\r\n        this.customersURL = process.env.REACT_APP_CUSTOMERS_SECURE_API_URL;\r\n\r\n        //Initialize the data(customers)\r\n        // this.state.data.push(new Customer(1, \"Google\", \"Hyderabad\"));\r\n        // this.state.data.push(new Customer(2, \"Facebook\", \"Bengaluru\"));\r\n        // this.state.data.push(new Customer(3, \"Apple\", \"Hyderabad\"));\r\n        // this.state.data.push(new Customer(4, \"Reliance\", \"Mumbai\"));\r\n\r\n        this.initData = [...this.state.data];\r\n    }\r\n    componentWillMount(){\r\n        console.log(\"[ListCustomers componentWillMount]\");\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"[ListCustomers componentDidMount]\");\r\n\r\n        axios\r\n            .get(this.customersURL, {headers: {\"x-access-token\": this.props.token}})\r\n            .then((resp) => {\r\n                console.log(\"Success\");\r\n                console.log(resp);\r\n                this.setState({\r\n                    data: resp.data\r\n                })\r\n\r\n            }, (resp) => {\r\n                console.log(\"Failed\");\r\n                console.log(resp);\r\n            });\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        console.log(\"[ListCustomers componentWillReceiveProps]\");\r\n    }\r\n    // shouldComponentUpdate(){\r\n    //     console.log(\"[ListCustomers shouldComponentUpdate]\");\r\n    //     return true;\r\n    // }\r\n    componentWillUpdate(){\r\n        console.log(\"[ListCustomers componentWillUpdate]\");\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"[ListCustomers componentDidUpdate]\");\r\n    }\r\n\r\n\r\n    add = (customer) => {\r\n\r\n        axios\r\n            .post(this.customersURL, customer)\r\n            .then(() => {\r\n                const updatedData = [...this.state.data];\r\n                updatedData.push(customer);\r\n                //updatedData.push(new Customer(parseInt(customer.id), customer.name, customer.location));\r\n\r\n                this.setState({\r\n                    data: updatedData\r\n                })\r\n                alert(\"Saved\");\r\n            }, () => {\r\n                alert(\"Failed\");\r\n            });\r\n    }\r\n    update = (customer) => {\r\n\r\n        axios\r\n            .put(this.customersURL, customer)\r\n            .then(() => {\r\n                const updatedData = [...this.state.data];\r\n                const index = updatedData.findIndex(cust => cust.id === customer.id);\r\n                updatedData[index] = customer;\r\n        \r\n                this.setState({\r\n                    data: updatedData,\r\n                    selectedCustomer: null\r\n                });\r\n                alert(\"Updated\");\r\n            }, () => {\r\n                alert(\"Failed\");\r\n            });\r\n    }\r\n    cancelEdit = () => {\r\n\r\n        this.setState({\r\n            selectedCustomer: null\r\n        });\r\n    }\r\n\r\n    delete = (index) => {\r\n\r\n\r\n        axios\r\n            .delete(this.customersURL + \"/\" + this.state.data[index].id)\r\n            .then(() => {\r\n\r\n                const updatedData = [...this.state.data];\r\n                updatedData.splice(index, 1);\r\n        \r\n                this.setState({\r\n                    data: updatedData\r\n                });\r\n                alert(\"Deleted\");\r\n\r\n            }, () => {\r\n                alert(\"Failed\");\r\n            })\r\n\r\n       \r\n    }\r\n\r\n    addNew = () => {\r\n\r\n        this.setState({\r\n            addMode: true\r\n        });\r\n    }\r\n\r\n    cancelAddNew = () => {\r\n        this.setState({\r\n            addMode: false\r\n        });\r\n    }\r\n\r\n    edit = (index) => {\r\n\r\n        this.setState({\r\n            selectedCustomer: this.state.data[index]\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        console.log(\"[ListCustomers render]\");\r\n        var output = this.state.data.map( (cust, index) => {\r\n            return (\r\n                <div key={index} className=\"customer\">\r\n                    <p>Id: {cust.id}</p>\r\n                    <p>Name: {cust.name}</p>\r\n                    <p>Location: {cust.location}</p>\r\n                    <div>\r\n                        {/* <button onClick={() => {this.delete(index)}}>Delete</button> */}\r\n                        <button onClick={this.delete.bind(this, index)}>Delete</button>\r\n                        <button onClick={() => {this.edit(index)}}>Edit</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n        return (\r\n            <div>\r\n                <h3>Customers</h3>\r\n               \r\n                <div style={{backgroundColor: ' rgb(54, 51, 51)',  display: 'flex', flexFlow: 'row wrap', justifyContent: 'center'}}>\r\n                    {output}\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.addNew}>Add New</button>\r\n                </div>\r\n                {this.state.addMode ? <CustomerForm onSave={this.add} \r\n                                                onCancel={this.cancelAddNew}/> : null}\r\n                \r\n                {this.state.selectedCustomer? <CustomerForm key={this.state.selectedCustomer.id} \r\n                                                    customer={this.state.selectedCustomer} \r\n                                                    onSave={this.update} onCancel={this.cancelEdit}/> : null}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapPropsToState = (state)=> {\r\n    return{\r\n        isAuth: state.isAuth,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapPropsToState)(ListCustomersSecure);\r\n","import React, {PureComponent} from 'react';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport simpleHOC from './SimpleHOC';\r\n\r\nclass WikiSearh extends PureComponent{\r\n\r\n    state = {\r\n        results: []\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.callWikiAPI = _.debounce(this.callWikiAPI, 500);\r\n    }\r\n    search=(evt)=> {\r\n\r\n        var searchText = evt.target.value;\r\n        //var url = \"https://en.wikipedia.org/w/api.php?action=opensearch&format=json&origin=*&search=\" + searchText;\r\n        \r\n        this.callWikiAPI(searchText);\r\n\r\n    }\r\n    callWikiAPI = (searchText) => {\r\n        var url = \"https://en.wikipedia.org/w/api.php\";\r\n        var params = {\r\n            action: \"opensearch\",\r\n            format: \"json\",\r\n            origin: \"*\",\r\n            search: searchText\r\n        }\r\n        axios\r\n            .get(url, {params: params})\r\n            .then((resp) => {\r\n                console.log(resp);\r\n                this.setState({\r\n                    results: resp.data[1]\r\n                })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h3>Wiki Search</h3>\r\n                <input type=\"search\" onChange={this.search}/>\r\n                {this.state.results.map((item, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <p>{item}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default simpleHOC(WikiSearh);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n//import {inc_ctr, decr_ctr, add_to_ctr} from '../redux/actionCreators';\r\nimport * as actionCreators from '../redux/actionCreators';\r\n\r\nclass ReduxDemo extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetch();\r\n    }\r\n\r\n    increment =() => {\r\n        this.props.inc();\r\n    }\r\n    add = () => {\r\n\r\n        this.props.addToCtr(parseInt(this.inp.value));\r\n    }\r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <h3>Redux Demo</h3>\r\n\r\n                <p>Counter from Redux Store: {this.props.ctr}</p>\r\n                <div>\r\n                    <button onClick={this.increment}>Increment</button>\r\n                    <button onClick={() => {this.props.decr()}}>Decrement</button>\r\n                </div>\r\n                <div>\r\n                    <input type=\"number\" ref={(inp)=> {this.inp = inp}}/>\r\n                    <button onClick={this.add}>Add To Counter</button>\r\n                </div>\r\n                <div>\r\n                    {this.props.customers.map((cust, index)=> {\r\n                        return(\r\n                            <div key={index}>\r\n                                <p>{cust.name}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapPropsToState = (state) => {\r\n\r\n    //ctr-> props\r\n    // mapped to state.counter\r\n    return {\r\n        ctr: state.counter,\r\n        customers: state.customers\r\n    }\r\n}\r\nconst mapPropsToDispatch = (dispatch) => {\r\n\r\n    // inc -> function on props\r\n    // return {\r\n    //     inc: () => {dispatch({type: \"INC_CTR\"})},\r\n    //     decr: () => {dispatch({type: \"DECR_CTR\"})},\r\n    //     addToCtr: (value) => {dispatch({type: \"ADD_TO_CTR\", payload: value})}\r\n    // }\r\n\r\n    return {\r\n        inc: () => {dispatch(actionCreators.inc_ctr())},\r\n        decr: () => {dispatch(actionCreators.decr_ctr())},\r\n        addToCtr: (value) => {dispatch(actionCreators.add_to_ctr(value))},\r\n        fetch : () => {dispatch(actionCreators.fetch_customers())}\r\n    }\r\n}\r\n\r\nexport default connect(mapPropsToState, mapPropsToDispatch)(ReduxDemo);","import axios from 'axios';\r\n\r\nexport const inc_ctr = () => {\r\n    return {\r\n        type: \"INC_CTR\"\r\n    }\r\n}\r\nexport const decr_ctr = () => {\r\n    return {\r\n        type: \"DECR_CTR\"\r\n    }\r\n}\r\nexport const add_to_ctr = (value) => {\r\n    return {\r\n        type: \"ADD_TO_CTR\",\r\n        payload: value\r\n    }\r\n}\r\nexport const fetch_customers = ()=> {\r\n\r\n    return (dispatch) => {\r\n        axios\r\n            .get(process.env.REACT_APP_CUSTOMERS_API_URL)\r\n            .then((resp) => {\r\n                dispatch( {\r\n                    type: \"FETCH_CUSTOMERS\",\r\n                    payload: resp.data\r\n                })\r\n            })\r\n    }\r\n}","import React, {Component, Fragment} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Alert } from 'reactstrap';\r\n\r\nclass Login extends Component{\r\n\r\n    state = {\r\n        shouldRedirect: false\r\n    }\r\n\r\n    login = () => {\r\n        const username = this.userInp.value;\r\n        const pwd = this.pwdInp.value;\r\n\r\n        axios\r\n            .post(process.env.REACT_APP_LOGIN_API_URL, \r\n                    null, {headers: {username: username, password: pwd}})\r\n            .then((resp) => {\r\n\r\n                \r\n                this.props.setAuth(true);\r\n                this.setState({\r\n                            shouldRedirect: true\r\n                        })\r\n                this.props.setToken(resp.data.token)        \r\n            }, () => {\r\n                this.props.setAuth(false);\r\n                this.setState({\r\n                    shouldRedirect: false\r\n                })\r\n                this.props.setToken(\"\")\r\n            })\r\n\r\n        // if(username === 'a' && pwd === 'a'){\r\n        //     this.props.setAuth(true);\r\n        //     this.setState({\r\n        //         shouldRedirect: true\r\n        //     })\r\n        // }\r\n        // else{\r\n        //     this.props.setAuth(false);\r\n        //     this.setState({\r\n        //         shouldRedirect: false\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.shouldRedirect){\r\n            return (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <h3>Login</h3>\r\n                <Alert color=\"info\">\r\n                    Please Login!!\r\n                </Alert>\r\n                <p>\r\n                    UserName: <input ref={(inp) => {this.userInp = inp}}/>\r\n                </p>\r\n                <p>\r\n                    Password: <input type=\"password\" ref={(inp) => {this.pwdInp = inp}}/>\r\n                </p>\r\n                <button onClick={this.login}>Login</button>\r\n            </Fragment>\r\n           \r\n        );\r\n    }\r\n\r\n}\r\nconst mapPropsToState = (state)=> {\r\n    return{\r\n        isAuth: state.isAuth,\r\n        token: state.token\r\n    }\r\n}\r\nconst mapPropsToDispatch = (dispatch) => {\r\n    return {\r\n        setAuth : (value)=> {dispatch({type: \"SET_AUTH\", payload: value})},\r\n        setToken: (value)=> {dispatch({type: \"SET_TOKEN\", payload: value})}\r\n    }\r\n}\r\n\r\nexport default connect(mapPropsToState, mapPropsToDispatch)(Login);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Redirect, withRouter} from 'react-router-dom';\r\n\r\nclass ProtectedRoute extends Component{\r\n\r\n    render(){\r\n\r\n        const WrappedComponent = this.props.component;\r\n        return (\r\n            \r\n            <Route path={this.props.path} render={() => {\r\n\r\n                return (this.props.isAuth ? <WrappedComponent/> : <Redirect to=\"/login\"/>)\r\n\r\n            }} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapPropsToState = (state)=> {\r\n    return{\r\n        isAuth: state.isAuth\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapPropsToState)(ProtectedRoute));","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Hello from './components/Hello';\nimport Counter from \"./components/Counter\";\nimport ListCustomers from \"./components/ListCustomers\";\nimport ListCustomersSecure from \"./components/ListCustomersSecure\";\nimport WikiSearch from './components/WikiSearch';\n//import SimpleHOC from './components/SimpleHOC';\nimport ReduxDemo from './components/ReduxDemo';\nimport Login from './components/Login';\nimport ProtectedRoute from './components/ProtectedRoute';\n\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App container\">\n        <header className=\"App-header\">\n          <h2>React Application</h2>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <article>\n                <BrowserRouter basename=\"/ReactApp/\">\n                    <section className=\"row\">\n                      <nav className=\"col-3\">\n                        <ul className=\"nav flex-column\">\n                          <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                          </li>\n                          <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/counter\">Counter</Link>\n                          </li>\n                          <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/customers\">Customers</Link>\n                          </li>\n                          <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/wiki\">Search</Link>\n                          </li>\n                          <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/redux\">Redux</Link>\n                          </li>\n                          <li className=\"nav-item\">\n                            <Link className=\"nav-link\"  to=\"/custsecure\">Customer Secure</Link>\n                          </li>\n                          <li>\n                            <Link to=\"/login\">Login</Link>\n                          </li>\n                        </ul>\n                      </nav>\n                      <article className=\"col-9\">\n                          {/* <Hello message=\"\"/> */}\n                          {/* <Route path=\"/\" exact component={Hello}/> */}\n                          <Route path=\"/\" exact render={() => <Hello message=\"Routing\"/>}/>\n                          <Route path=\"/counter\" component={Counter}/>\n                          <ProtectedRoute path=\"/customers\" component={ListCustomers}/>\n                          <ProtectedRoute path=\"/custsecure\" component={ListCustomersSecure}/>\n                          <Route path=\"/wiki\" component={WikiSearch}/>\n                          <Route path=\"/redux\" component={ReduxDemo}/>\n                          <Route path=\"/login\" component={Login}/>\n                      </article>\n                    </section>\n                </BrowserRouter>\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//Init State\r\nconst initState = {\r\n    counter: 0,\r\n    customers: [],\r\n    isAuth: false,\r\n    token: \"\"\r\n}\r\n\r\n//Reducer\r\nconst reducer = (state=initState, action)=> {\r\n\r\n    if(action.type === \"SET_TOKEN\"){\r\n        return {\r\n            ...state,\r\n            token : action.payload\r\n        }\r\n    }\r\n    if(action.type === \"SET_AUTH\"){\r\n        return {\r\n            ...state,\r\n            isAuth : action.payload\r\n        }\r\n    }\r\n\r\n    if(action.type === \"INC_CTR\"){\r\n        return {\r\n            ...state,\r\n            counter: state.counter + 1\r\n        }\r\n    }\r\n    if(action.type === \"DECR_CTR\"){\r\n        return {\r\n            ...state,\r\n            counter: state.counter - 1\r\n        }\r\n    }\r\n    if(action.type === \"ADD_TO_CTR\"){\r\n        return {\r\n            ...state,\r\n            counter: state.counter + action.payload\r\n        }\r\n    }\r\n    if(action.type === \"FETCH_CUSTOMERS\"){\r\n          return {\r\n              ...state,\r\n              customers: action.payload\r\n          }  \r\n    }\r\n    return state;\r\n}\r\n\r\n//middleware\r\n\r\nconst logger = (store) => {\r\n\r\n    return (next) => {\r\n        \r\n        return (action) => {\r\n\r\n            console.log(\"[Logger]: \", store.getState());\r\n            console.log(\"[Logger]: \", action);\r\n            const result = next(action);\r\n            console.log(\"[Logger after next]: \", store.getState());\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\n//Store\r\nexport const store = createStore(\r\n                            reducer, \r\n                            applyMiddleware(logger, thunk));\r\n//window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()                            ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {store} from './redux/store';\nimport {Provider} from 'react-redux';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}